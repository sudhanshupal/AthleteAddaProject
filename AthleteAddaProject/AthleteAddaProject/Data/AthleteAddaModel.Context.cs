//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AthleteAddaProject.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AthleteAddaTestEntities : DbContext
    {
        public AthleteAddaTestEntities()
            : base("name=AthleteAddaTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Newsfeed> Newsfeeds { get; set; }
        public virtual DbSet<Publisher> Publishers { get; set; }
    
        public virtual ObjectResult<GetNewfeeds_Result> GetNewfeeds(Nullable<System.DateTime> searchDateTime, string searchText, Nullable<int> sortBy, Nullable<int> newsfeedCountFrom, Nullable<int> getTotalNewsfeeds)
        {
            var searchDateTimeParameter = searchDateTime.HasValue ?
                new ObjectParameter("SearchDateTime", searchDateTime) :
                new ObjectParameter("SearchDateTime", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var sortByParameter = sortBy.HasValue ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(int));
    
            var newsfeedCountFromParameter = newsfeedCountFrom.HasValue ?
                new ObjectParameter("NewsfeedCountFrom", newsfeedCountFrom) :
                new ObjectParameter("NewsfeedCountFrom", typeof(int));
    
            var getTotalNewsfeedsParameter = getTotalNewsfeeds.HasValue ?
                new ObjectParameter("GetTotalNewsfeeds", getTotalNewsfeeds) :
                new ObjectParameter("GetTotalNewsfeeds", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNewfeeds_Result>("GetNewfeeds", searchDateTimeParameter, searchTextParameter, sortByParameter, newsfeedCountFromParameter, getTotalNewsfeedsParameter);
        }
    }
}
